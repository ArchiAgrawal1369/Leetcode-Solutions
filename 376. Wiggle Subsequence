https://leetcode.com/problems/wiggle-subsequence/
//A wiggle sequence is a sequence where the differences between successive numbers strictly alternate between positive and negative.
//Given an integer array nums, return the length of the longest wiggle subsequence of nums.

class Solution {
public:
    int wiggleMaxLength(vector<int>& nums) {
        int count=0;
        for(int i=0;i<nums.size()-1;i++)
            if(nums[i]==nums[i+1])
            {nums.erase(nums.begin()+i); i--;}
        if(nums.size()<=2)   return nums.size();
for(int i=1;i<nums.size()-1;i++)
if(nums[i-1]<nums[i]&&nums[i+1]<nums[i] || nums[i-1]>nums[i]&&nums[i+1]>nums[i] )
    count++;
    return count+2;
    }
};


Runtime: 0 ms
Memory Usage: 7.1 MB
